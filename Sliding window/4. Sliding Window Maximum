class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Queue<Integer> q = new LinkedList<>();
        int n = nums.length, i = 0, j = 0, idx = 0;
        int[] result = new int[n-k+1];
        
        while(j < n) {
            while(q.size() > 0 && ((LinkedList<Integer>) q).getLast() < nums[j]){
                ((LinkedList<Integer>) q).pollLast();
            }
            q.offer(nums[j]);
            
            if(j-i+1 < k) {
                j++;
            } else if(j-i+1 == k) {
                result[idx] = q.peek();
                idx++;

                if(nums[i] == q.peek()) {
                    ((LinkedList<Integer>) q).pollFirst();
                }
                i++;
                j++;
            }
        }
        
        return result;
    }
}
