import java.util.* ;
import java.io.*; 
/************************************************************

    Following is the TreeNode class structure:

    class BinaryTreeNode {
		int val;
		BinaryTreeNode left;
		BinaryTreeNode right;

		BinaryTreeNode(int val) {
			this.val = val;
			this.left = null;
			this.right = null;
		}
	}

************************************************************/

public class Solution {
	public static ArrayList<Integer> getTopView(BinaryTreeNode root) {
		ArrayList<Integer> list = new ArrayList<>();
		if(root == null)
			return list;

		Queue<Pair> q = new LinkedList<>();
		TreeMap<Integer, Integer> map = new TreeMap<>();

		q.offer(new Pair(0, root));

		while(!q.isEmpty()) {
			int size = q.size();

			for(int i = 0; i < size ; i++) {
				int vertical = q.peek().vertical;
				BinaryTreeNode node = q.peek().node;

				if(map.get(vertical) == null) {
					map.put(vertical, node.val);
				}

				if(node.left != null)
					q.offer(new Pair(vertical - 1, node.left));
				
				if(node.right != null)
					q.offer(new Pair(vertical + 1, node.right));

				q.poll();
			}
		}

		for (Map.Entry<Integer,Integer> entry : map.entrySet()) {
            list.add(entry.getValue()); 
        }
		return list;
	}
}

class Pair {
	int vertical;
	BinaryTreeNode node;

	Pair(int vertical, BinaryTreeNode node) {
		this.vertical = vertical;
		this.node = node;
	}
}
