/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> zigzag = new ArrayList<>();
    
        if(root == null) 
            return zigzag;
        
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        boolean flag = false;
        
        while(!q.isEmpty()) {
            int size = q.size();
            List<Integer> tmplist = new ArrayList<>();
            
            for(int i = 0; i < size; i++) {
                TreeNode node = q.peek();

                if(node.left != null) 
                    q.offer(node.left);

                if(node.right != null)
                    q.offer(node.right);
                
                if(!flag) {
                    tmplist.add(q.poll().val);
                } else {
                    tmplist.add(0, q.poll().val);
                }
            }
            
            
            flag = !flag;
           
            
            zigzag.add(tmplist);
        }
        return zigzag;
    }
}
