/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        if(head == null)
            return null;
        
        ListNode dummy = new ListNode(0, head);
        ListNode prev = dummy;
        
        for(int i = 0; i < left-1; i++) {
            prev = prev.next;
        }
        
        int k = right-left;
        ListNode curr = prev.next;
        ListNode nex = curr.next;
        
        for(int i = 0 ; i < k; i++) {
            curr.next = curr.next.next;
            nex.next = prev.next;
            prev.next = nex;
            nex = curr.next;
        }
        
        return dummy.next;
    }
}
