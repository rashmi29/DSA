/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        if(head == null||head.next == null) return head;
        
        ListNode dummy = new ListNode(0, head);
        ListNode prev = dummy;
        ListNode curr, nex;
        
        int len = getLength(head);
        
        while(len >= k) {
            curr = prev.next;
            nex = curr.next;
            
            for(int i = 1; i < k ; i++) {
                curr.next = curr.next.next;
                nex.next = prev.next;
                prev.next = nex;
                nex = curr.next;
            }
            
            prev = curr;
            len -= k;
        }
        
        return dummy.next;
    }
    
    private int getLength(ListNode head) {
        int len = 0;
        while(head != null) {
            len++;
            head = head.next;
        }
        return len;
    }
}
